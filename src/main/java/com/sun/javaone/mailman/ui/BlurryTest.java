/**
 * Copyright (c) 2006, Sun Microsystems, Inc
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions and the following
 *     disclaimer in the documentation and/or other materials provided
 *     with the distribution.
 *   * Neither the name of the TimingFramework project nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package com.sun.javaone.mailman.ui;

import binding.BindingContext;
import binding.BindingConverter;
import binding.BindingDescription;
import binding.swing.JTextComponentTextBindingDescription;
import binding.swing.SwingBindingSupport;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import org.jdesktop.layout.GroupLayout;

/**
 *
 * @author  sky
 */
public class BlurryTest extends javax.swing.JFrame {

    /** Creates new form BlurryTest */
    public BlurryTest() {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        SwingBindingSupport.register();
        BindingContext context = new BindingContext();
        BlurryLabel bl = new BlurryLabel();
        System.err.println("font=" + label.getFont());
        bl.setFont(label.getFont());
        ((GroupLayout)getContentPane().getLayout()).replace(label, bl);
        context.addDescription(new JTextComponentTextBindingDescription(
                bl, "text", textTF, "text")).setChangeStrategy(JTextComponentTextBindingDescription.ChangeStrategy.CHANGE_ON_TYPE);
        context.addDescription(new BindingDescription(
                bl, "kernelWidth", kwTF, "text")).setConverter(new IntConverter());
        context.addDescription(new BindingDescription(
                bl, "kernelHeight", khTF, "text")).setConverter(new IntConverter());
        context.addDescription(new BindingDescription(
                bl, "blurFactor", blurTF, "text")).setConverter(new FloatConverter());
        context.addDescription(new BindingDescription(
                bl, "shiftW", shiftW, "text")).setConverter(new IntConverter());
        context.addDescription(new BindingDescription(
                bl, "shiftH", shiftH, "text")).setConverter(new IntConverter());
        context.bind();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jTextField2 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        label = new javax.swing.JLabel();
        kwTF = new javax.swing.JTextField();
        khTF = new javax.swing.JTextField();
        blurTF = new javax.swing.JTextField();
        textTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        shiftW = new javax.swing.JTextField();
        shiftH = new javax.swing.JTextField();

        jTextField2.setText("jTextField2");
        jTextField5.setText("jTextField5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        label.setFont(new java.awt.Font("Tahoma", 0, 12));
        label.setText("jLabel1");

        kwTF.setText("5");

        khTF.setText("5");

        blurTF.setText(".5");

        textTF.setText("blah blah");

        jLabel2.setText("Width");

        jLabel3.setText("Height");

        jLabel4.setText("Blur");

        jLabel5.setText("Text");

        jLabel1.setText("ShiftW");

        jLabel6.setText("ShiftH");

        shiftW.setText("0");

        shiftH.setText("jTextField3");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(jLabel2)
                    .add(jLabel3)
                    .add(jLabel4)
                    .add(jLabel1)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(shiftH, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                    .add(shiftW, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE))
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .add(46, 46, 46)
                .add(kwTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap(10, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(46, 46, 46)
                .add(khTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap(10, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(46, 46, 46)
                .add(blurTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap(10, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(46, 46, 46)
                .add(textTF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addContainerGap(10, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(label, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .add(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(label, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(kwTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(khTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(blurTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(4, 4, 4)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(textTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(shiftW, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(shiftH, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new BlurryTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField blurTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField khTF;
    private javax.swing.JTextField kwTF;
    private javax.swing.JLabel label;
    private javax.swing.JTextField shiftH;
    private javax.swing.JTextField shiftW;
    private javax.swing.JTextField textTF;
    // End of variables declaration//GEN-END:variables


    private static final class FloatConverter extends BindingConverter {
        @Override
        public Object convertToSource(BindingDescription description,
                Object value) {
            return Float.parseFloat((String)value);
        }
        @Override
        public Object convertToTarget(BindingDescription description,
                Object value) {
            return value.toString();
        }
    }
    private static final class IntConverter extends BindingConverter {
        @Override
        public Object convertToSource(BindingDescription description,
                Object value) {
            return Integer.parseInt((String)value);
        }
        @Override
        public Object convertToTarget(BindingDescription description,
                Object value) {
            return value.toString();
        }
    }
}
